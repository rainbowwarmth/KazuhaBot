name: Release

on:
  push:
    branches:
      - master  # 监听 master 分支的推送事件

jobs:
  release-please:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码（配置权限以允许后续推送）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # 保留 Git 凭证
          fetch-depth: 0            # 获取完整提交历史

      # 2. 自动更新版本号并推送（核心新增逻辑）
      - name: Auto Bump Version
        run: |
          # 使用 npm 自动递增修订号（保留原版本号格式）
          npm version patch --no-git-tag-version
          
          # 配置 Git 身份（与 GitHub 账户解耦）
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@noreply.github.com"
          
          # 提交版本更新（添加 [skip ci] 防止循环触发）
          git add package.json
          git commit -m "chore: auto bump version [skip ci]"
          
          # 强制推送至当前分支（覆盖可能存在的 release-please 提交）
          git push origin HEAD:master --force

      # 3. 获取更新后的版本号（关键顺序调整）
      - name: Get updated version
        id: get_version
        run: |
          UPDATED_VERSION=$(jq -r '.version' package.json)
          echo "Updated version: $UPDATED_VERSION"
          echo "VERSION=$UPDATED_VERSION" >> $GITHUB_ENV

      # 4. 获取最新的 Release 版本号（优化 API 请求）
      - name: Get latest release
        id: get_latest_release
        run: |
          LATEST_TAG=$(gh api repos/${{ github.repository }}/releases/latest --jq '.tag_name')
          echo "Latest release: $LATEST_TAG"
          echo "LATEST_RELEASE=$LATEST_TAG" >> $GITHUB_ENV

      # 5. 智能版本比较逻辑（处理语义化版本）
      - name: Version Comparison
        id: version_check
        run: |
          if [ "$VERSION" != "$LATEST_RELEASE" ]; then
            echo "::notice::New version $VERSION detected"
            echo "UPDATE_FLAG=1" >> $GITHUB_ENV
          else
            echo "::warning::Version $VERSION already released"
            echo "UPDATE_FLAG=0" >> $GITHUB_ENV
          fi

      # 6. 条件执行 release-please（优化触发逻辑）
      - name: Release Please
        if: env.UPDATE_FLAG == '1'
        uses: GoogleCloudPlatform/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          bump-minor-pre-major: true
          monorepo-tags: false
          changelog-sections: |
            {"feat": "🚀 Features","fix": "🐛 Bug Fixes","perf": "⚡ Performance"}
          pull-request-title-pattern: "chore(release): ${version}"

      # 7. 资产上传优化（支持动态路径）
      - name: Upload Assets
        if: env.UPDATE_FLAG == '1'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.zip
          asset_name: build-artifacts-${{ env.VERSION }}.zip
          asset_content_type: application/zip
